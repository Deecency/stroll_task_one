import 'package:flutter/material.dart';class PageWrapper extends StatelessWidget {  const PageWrapper({    super.key,    this.child,    this.bgImage,    this.bottom = true,    this.hideBg = false,    this.backgroundColor,    this.padding,    this.appBar,    this.bottomNavigationBar,    this.bottomSheet,    this.floatingActionButton,    this.resizeToAvoidBottomInset,    this.scaffoldKey,  });  final Widget? child;  final EdgeInsets? padding;  final bool hideBg;  final String? bgImage;  final bool bottom;  final Color? backgroundColor;  final bool? resizeToAvoidBottomInset;  final Widget? bottomNavigationBar;  final Widget? floatingActionButton;  final Widget? bottomSheet;  final GlobalKey<ScaffoldState>? scaffoldKey;  final PreferredSizeWidget? appBar;  @override  Widget build(BuildContext context) {    final bottomPadding = MediaQuery.paddingOf(context).bottom;    return PopScope(      canPop: false,      child: Scaffold(        key: scaffoldKey,        resizeToAvoidBottomInset: resizeToAvoidBottomInset,        backgroundColor: backgroundColor ?? Colors.white,        bottomNavigationBar: bottomNavigationBar,        bottomSheet: bottomSheet,        appBar: appBar,        extendBody: true,        floatingActionButton: floatingActionButton,        body: Container(          height: MediaQuery.of(context).size.height,          width: MediaQuery.of(context).size.width,          decoration: hideBg || bgImage == null              ? null              : BoxDecoration(                  image: DecorationImage(                    fit: BoxFit.cover,                    colorFilter: const ColorFilter.mode(                      Colors.white,                      BlendMode.darken,                    ),                    image: AssetImage(                      bgImage ?? 'assets/images/onboarding-bg.png',                    ),                  ),                ),          child: SafeArea(            bottom: false,            top: false,            minimum: padding ??                (appBar != null                    ? EdgeInsets.fromLTRB(20, 0, 20, bottom ? (bottomPadding) : 0)                    : EdgeInsets.fromLTRB(20, 53, 20, bottom ? (bottomPadding) : 0)),            child: child ?? const SizedBox.shrink(),          ),        ),      ),    );  }}class FormPageWrapper extends PageWrapper {  FormPageWrapper({    super.key,    Widget? child,    Widget? header,    String? bgImage,    bool bottom = true,    bool hideBg = false,    Color? backgroundColor,    EdgeInsets? padding,    PreferredSizeWidget? appBar,    Widget? bottomNavigationBar,    Widget? floatingActionButton,    Widget? bottomSheet,    bool? resizeToAvoidBottomInset,    GlobalKey<ScaffoldState>? scaffoldKey,  }) : super(          child: CustomScrollView(            keyboardDismissBehavior: ScrollViewKeyboardDismissBehavior.onDrag,            physics: const ClampingScrollPhysics(),            slivers: [              if (header != null)                PinnedHeaderSliver(                  child: ColoredBox(                    color: backgroundColor ?? Colors.white,                    child: header,                  ),                ),              SliverFillRemaining(                hasScrollBody: false,                child: child,              ),            ],          ),          bgImage: bgImage,          bottom: bottom,          hideBg: hideBg,          backgroundColor: backgroundColor,          padding: padding,          appBar: appBar,          bottomNavigationBar: bottomNavigationBar,          bottomSheet: bottomSheet,          floatingActionButton: floatingActionButton,          resizeToAvoidBottomInset: resizeToAvoidBottomInset,          scaffoldKey: scaffoldKey,        );}